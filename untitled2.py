# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TsbnkLBB8OInuNBh7KVqaC265_8oaUnu
"""

import tensorflow as tf
from tensorflow.keras.applications import MobileNetV2
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, GlobalAveragePooling2D, Dropout
from tensorflow.keras.preprocessing.image import ImageDataGenerator
import os

# === CONFIG ===
import kagglehub

# Download latest version
DATASET_PATH = kagglehub.dataset_download("maxwellkuria/animals-that-destroy-farms-in-kenya")

# === CONFIG ===
IMG_SIZE = (224, 224)
BATCH_SIZE = 32
EPOCHS = 10
MODEL_NAME = "mobilenet_animals.h5"

# Your 6 classes
class_labels = ["Cows", "Goats", "Hippo", "Humans", "Hyenas", "Monkeys"]

# === DATA PREPROCESSING ===
train_datagen = ImageDataGenerator(
    rescale=1./255,
    rotation_range=20,
    width_shift_range=0.1,
    height_shift_range=0.1,
    brightness_range=[0.7, 1.3],
    zoom_range=0.2,
    horizontal_flip=True,
    validation_split=0.2
)

train_gen = train_datagen.flow_from_directory(
   os.path.join(DATASET_PATH, "DataSet"),
    target_size=IMG_SIZE,
    batch_size=BATCH_SIZE,
    class_mode="categorical",
    subset="training"
)

val_gen = train_datagen.flow_from_directory(
     os.path.join(DATASET_PATH, "DataSet"),
    target_size=IMG_SIZE,
    batch_size=BATCH_SIZE,
    class_mode="categorical",
    subset="validation"
)

# === MODEL SETUP ===
base_model = MobileNetV2(weights="imagenet", include_top=False, input_shape=(224, 224, 3))
base_model.trainable = False  # Freeze base model for transfer learning

model = Sequential([
    base_model,
    GlobalAveragePooling2D(),
    Dropout(0.3),
    Dense(len(class_labels), activation="softmax")
])

model.compile(optimizer="adam", loss="categorical_crossentropy", metrics=["accuracy"])

# === TRAIN ===
history = model.fit(train_gen, validation_data=val_gen, epochs=EPOCHS)

# === FINE-TUNE (optional, improves accuracy) ===
base_model.trainable = True
model.compile(optimizer=tf.keras.optimizers.Adam(1e-5),
              loss="categorical_crossentropy",
              metrics=["accuracy"])
history_ft = model.fit(train_gen, validation_data=val_gen, epochs=5)

# === SAVE MODEL ===
model.save(MODEL_NAME)
print(f"âœ… Model saved as {MODEL_NAME}")

from google.colab import files
files.download("mobilenet_animals.h5")